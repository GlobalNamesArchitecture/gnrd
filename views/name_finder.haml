- if @output[:status] == 303
  - if @output[:queue_size] > 0
    #found-names-loader Waiting in the queue...
  - else
    #found-names-loader Processing...
- else
  #output-format
    %span
      %a{:href => "#{SiteConfig.url_base}/name_finder.json?token=#{@output[:token]}" } JSON
    %span
      %a{:href => "#{SiteConfig.url_base}/name_finder.xml?token=#{@output[:token]}" } XML

  %p#found-names-duration Results are accessible at this URL for #{SiteConfig.cleaner_period} days
  - if !@output[:agent].blank? && @output[:agent][:content_type] && @output[:agent][:content_type].include?("image")
    %h3
      Source Image
    #found-names-preview
      %img{:src => @output[:input_url]}
  %ul#found-names-summary
    - if !@output[:input_url].blank?
      %li
        %strong
          - ellipsis = (@output[:input_url].length > 105) ? @output[:input_url][0..102] + "..." : @output[:input_url]
          %a{:href => @output[:input_url] } #{ellipsis}
    - if !@output[:file].blank?
      %li
        %strong #{@output[:file]}
    - if !@output[:total].blank? && @output[:status] == 200
      %li
        %strong #{@output[:total]}
        - if @output[:unique]
          %strong unique
        - if @output[:total] == 1 || !@output[:unique]
          name
        - else
          names
        - if !@output[:unique]
          %strong instances
        found using
        %strong #{@output[:engines].join(" and ")}
        - if @output[:engines] == ["TaxonFinder"] && @output[:english] == false
          (NetiNeti was not used)
    - if @output[:execution_time] && @output[:status] == 200
      %li
        = @output[:execution_time][:find_names_duration].to_s
        s to find names, #{@output[:execution_time][:total_duration].to_s} s for entire process
  - if @output[:total] && @output[:total] > 0
    %table#found-names-grid
      %thead
        %tr
          - if @output[:verbatim]
            %th Verbatim Strings
          %th Scientific Names
      %tbody
        - cycle = "odd"
        - @output[:names].sort { |a,b| a[:scientificName] <=> b[:scientificName] }.each do |name|
          - cycle = (cycle == "odd") ? "even" : "odd"
          %tr{:class => cycle}
            - if @output[:verbatim]
              %td= name[:verbatim]
            %td= name[:scientificName]
